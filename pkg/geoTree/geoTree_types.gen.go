// Package geoTree provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package geoTree

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	JWTAuthScopes = "JWTAuth.Scopes"
)

// Error defines model for Error.
type Error struct {
	Code    int32  `json:"code"`
	Message string `json:"message"`
}

// CadaTreePosition defines model for cadaTreePosition.
type CadaTreePosition struct {
	// CadaCode code interne de cadastre pour ce type de point
	CadaCode    int32              `json:"cada_code"`
	CadaComment string             `json:"cada_comment"`
	CadaDate    openapi_types.Date `json:"cada_date"`

	// CadaId identifiant interne de cadastre pour cet objet
	CadaId       int32   `json:"cada_id"`
	CadaTreeType *string `json:"cada_tree_type,omitempty"`

	// CreatedAt date de création de cet enregistrement dans la base
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// CreatedBy identifiant de l'utilisateur ayant créé cet enregistrement
	CreatedBy int32 `json:"created_by"`

	// Deleted cet enregisrement a été marqué comme effacé
	Deleted *bool `json:"deleted,omitempty"`

	// DeletedAt date à laquelle cet enregisrement a été marqué comme effacé
	DeletedAt *time.Time `json:"deleted_at,omitempty"`

	// DeletedBy utilisateur ayant demandé de marquer cet enregisrement comme effacé
	DeletedBy   *int32  `json:"deleted_by,omitempty"`
	Description *string `json:"description,omitempty"`

	// GoelandThingId FK sur la clé primaire du goéland Thing de type arbre pour cette position d'objet
	GoelandThingId *int32 `json:"goeland_thing_id,omitempty"`

	// GoelandThingSavedAt date saisie id thing arbre goéland correspondant a cette position
	GoelandThingSavedAt *time.Time `json:"goeland_thing_saved_at,omitempty"`

	// GoelandThingSavedBy utilisateur ayant effectué la dernière saisie id thing arbre goéland correspondant a cette position
	GoelandThingSavedBy *int32 `json:"goeland_thing_saved_by,omitempty"`

	// Id cet Universally unique identifier (UUID) sera généré automatiquement pour vous
	Id                  openapi_types.UUID `json:"id"`
	PosAltitude         *float64           `json:"pos_altitude,omitempty"`
	PosEast             float64            `json:"pos_east"`
	PosNorth            float64            `json:"pos_north"`
	TreeCircumferenceCm *int32             `json:"tree_circumference_cm,omitempty"`
	TreeCrownM          *int32             `json:"tree_crown_m,omitempty"`
}

// CadaTreePositionList defines model for cadaTreePositionList.
type CadaTreePositionList struct {
	CadaComment string             `json:"cada_comment"`
	CadaDate    openapi_types.Date `json:"cada_date"`

	// CadaId identifiant interne de cadastre pour cet objet
	CadaId       int32  `json:"cada_id"`
	CadaTreeType string `json:"cada_tree_type"`

	// CreatedBy identifiant de l'utilisateur ayant créé cet enregistrement
	CreatedBy int32 `json:"created_by"`

	// GoelandThingId FK sur la clé primaire du goéland Thing de type arbre pour cette position d'objet
	GoelandThingId int32 `json:"goeland_thing_id"`

	// Id cet Universally unique identifier (UUID) sera généré automatiquement pour vous
	Id                  openapi_types.UUID `json:"id"`
	PosEast             float64            `json:"pos_east"`
	PosNorth            float64            `json:"pos_north"`
	TreeCircumferenceCm int32              `json:"tree_circumference_cm"`
	TreeCrownM          int32              `json:"tree_crown_m"`
}

// ListParams defines parameters for List.
type ListParams struct {
	// CadaDate cada_date is the date to filter by the cadaTreePositions to return
	CadaDate *openapi_types.Date `form:"cada_date,omitempty" json:"cada_date,omitempty"`

	// CreatedBy id of the creator to filter by the cadaTreePositions to return
	CreatedBy *int32 `form:"created_by,omitempty" json:"created_by,omitempty"`

	// Deleted add records that are deleted to the list of cadaTreePositions to return
	Deleted *bool `form:"deleted,omitempty" json:"deleted,omitempty"`

	// Limit maximum number of results to return
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset offset rows to skip before returning rows
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`
}

// CountParams defines parameters for Count.
type CountParams struct {
	// CadaDate cada_date is the date to filter by the cadaTreePositions to return
	CadaDate *openapi_types.Date `form:"cada_date,omitempty" json:"cada_date,omitempty"`

	// Deleted add records that are deleted to the list of cadaTreePositions to return
	Deleted *bool `form:"deleted,omitempty" json:"deleted,omitempty"`

	// CreatedBy id of the creator to filter by the cadaTreePositions to return
	CreatedBy *int32 `form:"created_by,omitempty" json:"created_by,omitempty"`
}

// GeoJsonParams defines parameters for GeoJson.
type GeoJsonParams struct {
	// CadaDate cada_date is the date to filter by the cadaTreePositions to return
	CadaDate *openapi_types.Date `form:"cada_date,omitempty" json:"cada_date,omitempty"`

	// Deleted add records that are deleted to the list of cadaTreePositions to return
	Deleted *bool `form:"deleted,omitempty" json:"deleted,omitempty"`

	// CreatedBy id of the creator to filter by the cadaTreePositions to return
	CreatedBy *int32 `form:"created_by,omitempty" json:"created_by,omitempty"`

	// Limit maximum number of results to return
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset offset rows to skip before returning rows
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`
}

// CreateJSONRequestBody defines body for Create for application/json ContentType.
type CreateJSONRequestBody = CadaTreePosition

// UpdateFormdataRequestBody defines body for Update for application/x-www-form-urlencoded ContentType.
type UpdateFormdataRequestBody = CadaTreePosition
